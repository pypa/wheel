[build-system]
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "wheel"
description = "A built-package format for Python"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: System :: Archiving :: Packaging",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
authors = [{name = "Daniel Holth", email = "dholth@fastmail.fm"}]
maintainers = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
keywords = ["wheel", "packaging"]
requires-python = ">=3.7"
dynamic = ["version"]

[project.urls]
Documentation = "https://wheel.readthedocs.io/"
Changelog = "https://wheel.readthedocs.io/en/stable/news.html"
"Issue Tracker" = "https://github.com/pypa/wheel/issues"

[project.scripts]
wheel = "wheel.cli:main"

[project.entry-points."distutils.commands"]
bdist_wheel = "wheel.bdist_wheel:bdist_wheel"

[project.optional-dependencies]
test = [
    "pytest >= 6.0.0",
    "setuptools >= 65",
]

[tool.flit.sdist]
include = [
    "LICENSE*",
    "docs/**/*.py",
    "docs/**/*.rst",
    "docs/Makefile",
    "docs/make.bat",
    "manpages/*.rst",
    "tests/**/*.py",
    "tests/**/*.txt",
    "tests/**/*.c",
    "tests/**/*.h",
    "tests/**/*.cfg",
    "tests/testdata/macosx_minimal_system_version/*.dylib",
    "tests/testdata/test-1.0-py2.py3-none-any.whl",
]
exclude = [
    ".cirrus.yml",
    ".github/**",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".readthedocs.yml",
    "**/__pycache__",
]

[tool.black]
extend-exclude = '''
^/src/wheel/vendored/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore::Warning:_pytest.*",
]
log_cli_level = "info"
testpaths = ["test"]

[tool.coverage.run]
source = ["wheel"]
omit = ["*/vendored/*"]

[tool.coverage.report]
show_missing = true

[tool.ruff]
line-length = 88
select = [
    "E", "F", "W",  # default flake-8
    "I",            # isort
    "PGH",          # pygrep-hooks
    "UP",           # pyupgrade
    "B",            # flake8-bugbear
]
src = ["src"]

# Tox (https://tox.wiki/) is a tool for running tests in multiple virtualenvs.
# This configuration file will run the test suite on all supported python
# versions. To use it, "pipx install tox" and then run "tox" from this
# directory.

[tool.tox]
legacy_tox_ini = '''
[tox]
envlist = py37, py38, py39, py310, py311, py312, py313, pypy3, lint, pkg
minversion = 4.0.0
skip_missing_interpreters = true

[testenv]
package = wheel
wheel_build_env = .pkg
depends = lint
commands = {env_python} -b -m pytest {posargs}
extras = test
set_env =
  PYTHONWARNDEFAULTENCODING = 1

[testenv:lint]
depends =
basepython = python3
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure
skip_install = true

[testenv:pkg]
basepython = python3
deps =
    build
    flit>=3.8
commands = {envpython} -b -m pytest tests/test_sdist.py {posargs}
'''

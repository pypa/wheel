[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "wheel"
description = "A built-package format for Python"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: System :: Archiving :: Packaging",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]
authors = [{name = "Daniel Holth", email = "dholth@fastmail.fm"}]
maintainers = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
keywords = ["wheel", "packaging"]
license = {file = "LICENSE.txt"}
requires-python = ">=3.7"
dependencies = [
    "setuptools >= 45.2.0"
]
dynamic = ["version"]

[project.urls]
Documentation = "https://wheel.readthedocs.io/"
Changelog = "https://wheel.readthedocs.io/en/stable/news.html"
"Issue Tracker" = "https://github.com/pypa/wheel/issues"

[project.scripts]
wheel = "wheel.cli:main"

[project.entry-points."distutils.commands"]
bdist_wheel = "wheel.bdist_wheel:bdist_wheel"

[project.optional-dependencies]
test = [
    "pytest >= 6.0.0"
]

[tool.flit.sdist]
include = [
    "LICENSE*",
    "docs/*.py",
    "docs/*.rst",
    "docs/*/*.rst",
    "docs/Makefile",
    "docs/make.bat",
    "manpages/*.rst",
    "tests/*.py",
    "tests/cli/*.py",
    "tests/cli/*.txt",
    "tests/testdata/*.dist/*.py",
    "tests/testdata/*.py",
    "tests/testdata/abi3extension.dist/extension.c",
    "tests/testdata/abi3extension.dist/setup.cfg",
    "tests/testdata/commasinfilenames.dist/mypackage/*.py",
    "tests/testdata/commasinfilenames.dist/mypackage/data/*.py",
    "tests/testdata/commasinfilenames.dist/mypackage/data/*.txt",
    "tests/testdata/commasinfilenames.dist/testrepo-0.1.0/mypackage/*.py",
    "tests/testdata/complex-dist/*.py",
    "tests/testdata/complex-dist/complexdist/*.py",
    "tests/testdata/extension.dist/*.c",
    "tests/testdata/headers.dist/header.h",
    "tests/testdata/headers.dist/setup.cfg",
    "tests/testdata/macosx_minimal_system_version/*.c",
    "tests/testdata/macosx_minimal_system_version/*.dylib",
    "tests/testdata/simple.dist/simpledist/*.py",
    "tests/testdata/test-1.0-py2.py3-none-any.whl",
    "tests/testdata/unicode.dist/unicodedist/*.py",
    "tox.ini",
]
exclude = [
    ".cirrus.yml",
    ".github/*",
    ".github/*/*",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".readthedocs.yml",
    "__pycache__",
    "*/__pycache__",
    "*/*/__pycache__",
    "*/*/*/__pycache__",
]

[tool.black]
target-version = ['py37']
extend-exclude = '''
^/src/wheel/vendored/
'''

[tool.flake8]
max-line-length = 88

[tool.pytest.ini_options]
testpaths = "tests"

[tool.coverage.run]
source = ["wheel"]
omit = ["*/vendored/*"]

[tool.coverage.report]
show_missing = true

[tool.ruff]
line-length = 88
select = [
    "E", "F", "W",  # default flake-8
    "I",            # isort
    "PGH",          # pygrep-hooks
    "UP",           # pyupgrade
    "B0",           # flake8-bugbear
]
ignore = [
    "E501",  # Line too long
]
target-version = "py37"
src = ["src"]
